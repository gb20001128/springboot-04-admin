spring:
  datasource:
    url: jdbc:mysql://localhost:3306/user_db
    username: root
    password: 1234
    driver-class-name: com.mysql.jdbc.Driver

    druid:
      aop-patterns: com.admin.*   #监控SpringBean
      filters: stat,wall          # 开启功能: stat（sql监控）,wall（防火墙）

      stat-view-servlet:          # 配置监控页功能
        enabled: true
        login-username: admin     #监控页的登录账号
        login-password: 123456    #监控页的登录密码
        resetEnable: false        #监控页的重置按钮功能不开启

      web-stat-filter:            # 监控web上的jdbc
        enabled: true
        urlPattern: /*            #所有请求
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'


      filter:
        stat:                     # 对上面filters里面的stat的详细配置
          slow-sql-millis: 1000
          logSlowSql: true
          enabled: true
        wall:
          enabled: true
          config:
            drop-table-allow: false

  #  设置超时时间:3秒
  jdbc:
    template:
      query-timeout: 3

#boot:
  #admin:
    #client:
      #url: http://localhost:8888
       #instance:
        #prefer-ip: true #使用ip注册进来
#application:
  #name: springboot-04-admin

# 配置mybatis规则
mybatis:
  mapper-locations: classpath:mapper/*.xml  #sql映射文件位置
  configuration:     #对应着mybatis的配置文件-mybatis-config.xml
    map-underscore-to-camel-case: true              #开启驼峰命名规则

# config-location: classpath:mybatis-config.xml 可以不写mybatis的配置文件,所有配置文件的配置都放在上面的configuration配置项中即可
#configuration配置项和配置文件mybatis-config.xml不能同时有,会冲突！


#management 是所有actuator的配置
#management.endpoint.端点名.xxx 对某个端点的具体配置
management:
  endpoints:
    enabled-by-default: true #默认开启所有监控端点
    web:
      exposure:
        include: '*'  #以web方式暴露
  endpoint:
    health:
      show-details: always  #总是显示详细信息


#定制info信息(详细信息)
info:
  appName: boot-admin
  version: 2.0.1
  mavenProjectName: @project.artifactId@  #使用@@可以获取maven的pom文件值
  mavenProjectVersion: @project.version@  #如果启动项目时,在这出错,可能是因为idea暂时没有识别出来maven项目,右键项目中的pom.xml--maven--report,就好了